[{"W:\\my-app\\src\\reportWebVitals.js":"1","W:\\my-app\\src\\App.js":"2","W:\\my-app\\src\\components\\MapPage.jsx":"3","W:\\my-app\\src\\components\\DropdownMenu.jsx":"4","W:\\my-app\\src\\index.js":"5","W:\\my-app\\src\\components\\AnalysisPage.jsx":"6","W:\\my-app\\src\\utilities\\deepCopy.js":"7"},{"size":362,"mtime":1606518752851,"results":"8","hashOfConfig":"9"},{"size":2973,"mtime":1610823991637,"results":"10","hashOfConfig":"9"},{"size":10314,"mtime":1610826847170,"results":"11","hashOfConfig":"9"},{"size":2357,"mtime":1610297249361,"results":"12","hashOfConfig":"13"},{"size":786,"mtime":1610826874758,"results":"14","hashOfConfig":"9"},{"size":224,"mtime":1610065805215,"results":"15","hashOfConfig":"9"},{"size":112,"mtime":1610209966122,"results":"16","hashOfConfig":"9"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1gnncv2",{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1qqbs61",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"19"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"W:\\my-app\\src\\reportWebVitals.js",[],["35","36"],"W:\\my-app\\src\\App.js",["37","38","39","40","41"],"import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport \"./App.css\";\nimport MapPage from \"./components/MapPage\";\nimport AnalysisPage from './components/AnalysisPage.jsx';\nimport logoblue from './images/logoblue.svg';\nconst US_MAP_PAGE = \"USMapPage\";\nconst DATA_ANALYSIS_PAGE = \"DataAnalysisPage\";\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState(US_MAP_PAGE); // We have \"US_MAP_PAGE\" and \"DATA_ANALYSIS_PAGE\"\n  console.log(currentPage);\n  console.log(currentPage === US_MAP_PAGE ? \"nav-bottom-highlight\" : null);\n  // Source is the data source\n  // Layer specifies how the website is going to render our map (data source)\n  return (\n    <React.Fragment>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\" style={{height:\"8vh\"}}>\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"#\" style={{fontSize:\"1.25rem\"}}><span style={{fontSize:\"2.5rem\"}}>US</span> Covid-19 Analysis \n            <img className=\"logo-blue\" src={logoblue} alt=\"logoblue\" />\n          </a>\n          {/* <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button> */}\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav ml-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <Link className={\"nav-link nav-text\" + (currentPage === US_MAP_PAGE ? \" nav-bottom-highlight\" : \"\")} onClick={() => setCurrentPage(US_MAP_PAGE)} to=\"/\">U.S. Map</Link>\n                {/* <div className=\"nav-underline\"></div> */}\n              </li>\n              <li className=\"nav-item\">\n                <Link className={\"nav-link nav-text\" + (currentPage === US_MAP_PAGE ? \"\" : \" nav-bottom-highlight\")} onClick={() => setCurrentPage(DATA_ANALYSIS_PAGE)} to=\"/analysis\">Data Analysis</Link>\n              </li>\n              <li className=\"nav-item\">\n                <div className=\"navbar-division-line\"></div>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link nav-text\" href=\"#\">About</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link nav-text\" href=\"#\">Contact</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link nav-text\" href=\"#\">Source</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n      <Switch>\n        <Route path=\"/analysis\" render={(props) => <AnalysisPage {...props}></AnalysisPage>}></Route>\n        <Route path=\"/\" render={(props) => <MapPage {...props}></MapPage>}></Route>\n      </Switch>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","W:\\my-app\\src\\components\\MapPage.jsx",["42","43","44","45","46"],"import React from \"react\";\r\nimport { useState, useEffect } from 'react';\r\nimport MapGL, {Source, Layer} from 'react-map-gl';\r\n// import DropdownMenu from './DropdownMenu';\r\nimport deepCopy from '../utilities/deepCopy.js';\r\nimport {Dropdown} from 'reactjs-dropdown-component';\r\nimport \"../styles/MapPage.css\";\r\nimport \"../styles/DropdownMenu.css\";\r\n\r\nconst MapPage = () => {\r\n   // States for Mapbox\r\n  const [viewport, setViewport] = useState({\r\n    latitude: 40,\r\n    longitude: -100,\r\n    zoom: 3,\r\n    bearing: 0,\r\n    pitch: 0\r\n  });\r\n  const [hoveredFeature, setHoveredFeature] = useState(null);\r\n  const [x, setX] = useState(null);\r\n  const [y, setY] = useState(null);\r\n  const [zoomInState, setZoomInState] = useState([\r\n    {\r\n        id: 0,\r\n        title: 'Alabama',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 1,\r\n        title: 'Alaska',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'Arizona',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 3,\r\n        title: 'Arkansas',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 4,\r\n        title: 'California',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 5,\r\n        title: 'Colorado',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 6,\r\n        title: 'Connecticut',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 7,\r\n        title: 'Delaware',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 8,\r\n        title: 'Florida',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 9,\r\n        title: 'Georgia',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 10,\r\n        title: 'Hawaii',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 11,\r\n        title: 'Idaho',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 12,\r\n        title: 'Illinois',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 13,\r\n        title: 'Indiana',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 14,\r\n        title: 'Iowa',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 15,\r\n        title: 'Kansas',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 16,\r\n        title: 'Kentucky',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 17,\r\n        title: 'Louisiana',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 18,\r\n        title: 'Maine',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 19,\r\n        title: 'Maryland',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 20,\r\n        title: 'Massachusetts',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 21,\r\n        title: 'Michigan',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 22,\r\n        title: 'Minnesota',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 23,\r\n        title: 'Mississippi',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 24,\r\n        title: 'Missouri',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 25,\r\n        title: 'Montana',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 26,\r\n        title: 'Nebraska',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 27,\r\n        title: 'Nevada',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 28,\r\n        title: 'New Hampshire',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 29,\r\n        title: 'New Jersey',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 30,\r\n        title: 'New Mexico',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 31,\r\n        title: 'New York',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 32,\r\n        title: 'North Carolina',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 33,\r\n        title: 'North Dakota',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 34,\r\n        title: 'Ohio',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 35,\r\n        title: 'Oklahoma',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 36,\r\n        title: 'Oregon',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 37,\r\n        title: 'Pennsylvania',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 38,\r\n        title: 'Rhode Island',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 39,\r\n        title: 'South Carolina',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 40,\r\n        title: 'South Dakota',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 41,\r\n        title: 'Tennessee',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 42,\r\n        title: 'Texas',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 43,\r\n        title: 'Utah',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 44,\r\n        title: 'Vermont',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 45,\r\n        title: 'Virginia',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 46,\r\n        title: 'Washington',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 47,\r\n        title: 'West Virginia',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 48,\r\n        title: 'Wisconsin',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    },\r\n    {\r\n        id: 49,\r\n        title: 'Wyoming',\r\n        selected: false,\r\n        key: 'zoomInState'\r\n    }\r\n  ]);\r\n  const [currentDataset, setCurrentDataset] = useState([\r\n    {\r\n      id: 0,\r\n      title: \"2020 Election Result\",\r\n      selected: false,\r\n      key: 'currentDataset'\r\n    }\r\n  ]);\r\n\r\n\r\n  let changeZoomInState = newZoomInState => {\r\n    setZoomInState(newZoomInState);\r\n  };\r\n\r\n  let changeCurrentDataset = newCurrentDataset => {\r\n    setCurrentDataset(newCurrentDataset);\r\n  }\r\n  let onViewportChange = viewport => setViewport(viewport);\r\n\r\n  let onHover = event => {\r\n    const {\r\n      features, // The features are all the map layers that the cursor is currently on. In this case, we only want the data layer\r\n      srcEvent: {offsetX, offsetY}\r\n    } = event;\r\n    const hoveredFeature = features && features.find(f => f.layer.id === 'us-income-election'); // This is the data layer. It is null when the cursor is not on any data layer\r\n    setHoveredFeature(hoveredFeature);\r\n    setX(offsetX); // These will be the location for the tooltip\r\n    setY(offsetY);\r\n  };\r\n\r\n  let renderTooltip = () => {\r\n    console.log(hoveredFeature, x, y);\r\n    return ( // The properties in hoveredFeature is the features in our GeoJson data\r\n      hoveredFeature && (\r\n        <div className=\"tooltip-on-map\" style={{left: x, top: y}}>\r\n          <div>State: {hoveredFeature.properties.name}</div> \r\n          <div>Median Household Income: {hoveredFeature.properties.value}</div>\r\n          <div>Percentile: {(hoveredFeature.properties.percentile / 8) * 100}</div>\r\n          <div>GOP: {hoveredFeature.properties.per_gop}</div>\r\n          <div>DEM: {hoveredFeature.properties.per_dem}</div>\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Used to modify the parent states from DropdownMenu children\r\n   * @param {int} id: id of the selection being clicked\r\n   * @param {string} key: the name of the soon-to-be modified state\r\n   */\r\n  let resetThenSet = (id, key) => {\r\n    if (key === 'currentDataset') {\r\n      let copy_currentDataset = deepCopy(currentDataset);\r\n      copy_currentDataset.forEach((item) => item.selected = false);\r\n      copy_currentDataset[id].selected = true;\r\n      setCurrentDataset(copy_currentDataset);\r\n    } else if (key === 'zoomInState') {\r\n      let copy_zoomInState = deepCopy(zoomInState);\r\n      copy_zoomInState.forEach((item) => item.selected = false);\r\n      copy_zoomInState[id].selected = true;\r\n      setZoomInState(copy_zoomInState);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex\">\r\n      <div style={{width:\"17vw\", height:\"92vh\", padding:\"2rem\"}}>\r\n        <p className=\"dropdown-title-above\">Select a Data Set<br /> to Compare With:</p>\r\n        <Dropdown\r\n          title=\"2020 Election Result\"\r\n          list={currentDataset}\r\n          resetThenSet={resetThenSet}\r\n        />\r\n        <hr style={{borderTop: '1.5px solid #bbb', margin: '2rem 0rem'}}></hr>\r\n        <p className=\"dropdown-title-above\">Zoom into a state:</p>\r\n        {/* <DropdownMenu \r\n          title=\"Select state\"\r\n          list={zoomInState}\r\n          resetThenSet={resetThenSet}\r\n        /> */}\r\n        <Dropdown\r\n          searchable={[\"Search for state\", \"No matching state\"]}\r\n          title=\"Select state\"\r\n          list={zoomInState}\r\n          resetThenSet={resetThenSet}\r\n        />\r\n        {/* <DropdownMenu \r\n          selections={[\"2020 Election Result\"]}\r\n          currentSelection={currentDataset}\r\n          changeSelection={changeCurrentDataset}\r\n        /> */}\r\n      </div>\r\n      <MapGL\r\n        {...viewport}\r\n        width=\"83vw\"\r\n        height=\"92vh\"\r\n        // mapStyle=\"mapbox://styles/mapbox/light-v9\"\r\n        mapStyle=\"mapbox://styles/du201/ckj4vp7a72eu019lj3ivhvbz8\"\r\n        onViewportChange={onViewportChange}\r\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\r\n        onHover={onHover}\r\n      >\r\n        {renderTooltip()}\r\n      </MapGL>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapPage;","W:\\my-app\\src\\components\\DropdownMenu.jsx",["47"],"W:\\my-app\\src\\index.js",[],"W:\\my-app\\src\\components\\AnalysisPage.jsx",["48"],"import React from \"react\";\r\n\r\nconst AnalysisPage = () => {\r\n  return (\r\n    <iframe src=\"https://my208.shinyapps.io/a6-my208/\" width=\"100%\" height=\"1000px\" style={{border:\"none\"}} />\r\n  );\r\n};\r\n\r\nexport default AnalysisPage;","W:\\my-app\\src\\utilities\\deepCopy.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":2,"column":20,"nodeType":"55","messageId":"56","endLine":2,"endColumn":29},{"ruleId":"57","severity":1,"message":"58","line":21,"column":11,"nodeType":"59","endLine":21,"endColumn":77},{"ruleId":"57","severity":1,"message":"58","line":40,"column":17,"nodeType":"59","endLine":40,"endColumn":59},{"ruleId":"57","severity":1,"message":"58","line":43,"column":17,"nodeType":"59","endLine":43,"endColumn":59},{"ruleId":"57","severity":1,"message":"58","line":46,"column":17,"nodeType":"59","endLine":46,"endColumn":59},{"ruleId":"53","severity":1,"message":"54","line":2,"column":20,"nodeType":"55","messageId":"56","endLine":2,"endColumn":29},{"ruleId":"53","severity":1,"message":"60","line":3,"column":16,"nodeType":"55","messageId":"56","endLine":3,"endColumn":22},{"ruleId":"53","severity":1,"message":"61","line":3,"column":24,"nodeType":"55","messageId":"56","endLine":3,"endColumn":29},{"ruleId":"53","severity":1,"message":"62","line":334,"column":7,"nodeType":"55","messageId":"56","endLine":334,"endColumn":24},{"ruleId":"53","severity":1,"message":"63","line":338,"column":7,"nodeType":"55","messageId":"56","endLine":338,"endColumn":27},{"ruleId":"53","severity":1,"message":"54","line":2,"column":20,"nodeType":"55","messageId":"56","endLine":2,"endColumn":29},{"ruleId":"64","severity":1,"message":"65","line":5,"column":5,"nodeType":"59","endLine":5,"endColumn":111},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Source' is defined but never used.","'Layer' is defined but never used.","'changeZoomInState' is assigned a value but never used.","'changeCurrentDataset' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation"]