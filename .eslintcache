[{"W:\\my-app\\src\\reportWebVitals.js":"1","W:\\my-app\\src\\App.js":"2","W:\\my-app\\src\\components\\MapPage.jsx":"3","W:\\my-app\\src\\components\\DropdownMenu.jsx":"4","W:\\my-app\\src\\index.js":"5","W:\\my-app\\src\\components\\AnalysisPage.jsx":"6","W:\\my-app\\src\\utilities\\deepCopy.js":"7"},{"size":362,"mtime":1606518752851,"results":"8","hashOfConfig":"9"},{"size":2974,"mtime":1610207303565,"results":"10","hashOfConfig":"9"},{"size":10321,"mtime":1610230645653,"results":"11","hashOfConfig":"9"},{"size":2390,"mtime":1610227679815,"results":"12","hashOfConfig":"9"},{"size":677,"mtime":1610065557439,"results":"13","hashOfConfig":"9"},{"size":224,"mtime":1610065805215,"results":"14","hashOfConfig":"9"},{"size":112,"mtime":1610209966122,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1qqbs61",{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"W:\\my-app\\src\\reportWebVitals.js",[],["33","34"],"W:\\my-app\\src\\App.js",["35","36","37","38","39"],"import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport \"./App.css\";\nimport { Route, Switch, Link } from 'react-router-dom';\nimport MapPage from \"./components/MapPage\";\nimport AnalysisPage from './components/AnalysisPage.jsx';\nimport logoblue from './images/logoblue.svg';\n\nconst US_MAP_PAGE = \"USMapPage\";\nconst DATA_ANALYSIS_PAGE = \"DataAnalysisPage\";\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState(US_MAP_PAGE); // We have \"US_MAP_PAGE\" and \"DATA_ANALYSIS_PAGE\"\n  console.log(currentPage);\n  console.log(currentPage === US_MAP_PAGE ? \"nav-bottom-highlight\" : null);\n  // Source is the data source\n  // Layer specifies how the website is going to render our map (data source)\n  return (\n    <React.Fragment>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\" style={{height:\"8vh\"}}>\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"#\" style={{fontSize:\"1.25rem\"}}><span style={{fontSize:\"2.5rem\"}}>US</span> Covid-19 Analysis \n            <img className=\"logo-blue\" src={logoblue} alt=\"logoblue\" />\n          </a>\n          {/* <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button> */}\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav ml-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <Link className={\"nav-link nav-text\" + (currentPage === US_MAP_PAGE ? \" nav-bottom-highlight\" : \"\")} onClick={() => setCurrentPage(US_MAP_PAGE)} to=\"/\">U.S. Map</Link>\n                {/* <div className=\"nav-underline\"></div> */}\n              </li>\n              <li className=\"nav-item\">\n                <Link className={\"nav-link nav-text\" + (currentPage === US_MAP_PAGE ? \"\" : \" nav-bottom-highlight\")} onClick={() => setCurrentPage(DATA_ANALYSIS_PAGE)} to=\"/analysis\">Data Analysis</Link>\n              </li>\n              <li className=\"nav-item\">\n                <div className=\"navbar-division-line\"></div>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link nav-text\" href=\"#\">About</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link nav-text\" href=\"#\">Contact</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link nav-text\" href=\"#\">Source</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n      <Switch>\n        <Route path=\"/analysis\" render={(props) => <AnalysisPage {...props}></AnalysisPage>}></Route>\n        <Route path=\"/\" render={(props) => <MapPage {...props}></MapPage>}></Route>\n      </Switch>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","W:\\my-app\\src\\components\\MapPage.jsx",["40","41","42","43","44","45","46"],"W:\\my-app\\src\\components\\DropdownMenu.jsx",["47"],"W:\\my-app\\src\\index.js",[],"W:\\my-app\\src\\components\\AnalysisPage.jsx",["48"],"import React from \"react\";\r\n\r\nconst AnalysisPage = () => {\r\n  return (\r\n    <iframe src=\"https://my208.shinyapps.io/a6-my208/\" width=\"100%\" height=\"1000px\" style={{border:\"none\"}} />\r\n  );\r\n};\r\n\r\nexport default AnalysisPage;","W:\\my-app\\src\\utilities\\deepCopy.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":2,"column":20,"nodeType":"55","messageId":"56","endLine":2,"endColumn":29},{"ruleId":"57","severity":1,"message":"58","line":22,"column":11,"nodeType":"59","endLine":22,"endColumn":77},{"ruleId":"57","severity":1,"message":"58","line":41,"column":17,"nodeType":"59","endLine":41,"endColumn":59},{"ruleId":"57","severity":1,"message":"58","line":44,"column":17,"nodeType":"59","endLine":44,"endColumn":59},{"ruleId":"57","severity":1,"message":"58","line":47,"column":17,"nodeType":"59","endLine":47,"endColumn":59},{"ruleId":"53","severity":1,"message":"54","line":2,"column":20,"nodeType":"55","messageId":"56","endLine":2,"endColumn":29},{"ruleId":"53","severity":1,"message":"60","line":3,"column":16,"nodeType":"55","messageId":"56","endLine":3,"endColumn":22},{"ruleId":"53","severity":1,"message":"61","line":3,"column":24,"nodeType":"55","messageId":"56","endLine":3,"endColumn":29},{"ruleId":"53","severity":1,"message":"62","line":4,"column":8,"nodeType":"55","messageId":"56","endLine":4,"endColumn":20},{"ruleId":"53","severity":1,"message":"63","line":6,"column":9,"nodeType":"55","messageId":"56","endLine":6,"endColumn":25},{"ruleId":"53","severity":1,"message":"64","line":334,"column":7,"nodeType":"55","messageId":"56","endLine":334,"endColumn":24},{"ruleId":"53","severity":1,"message":"65","line":338,"column":7,"nodeType":"55","messageId":"56","endLine":338,"endColumn":27},{"ruleId":"53","severity":1,"message":"54","line":2,"column":20,"nodeType":"55","messageId":"56","endLine":2,"endColumn":29},{"ruleId":"66","severity":1,"message":"67","line":5,"column":5,"nodeType":"59","endLine":5,"endColumn":111},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Source' is defined but never used.","'Layer' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownMultiple' is defined but never used.","'changeZoomInState' is assigned a value but never used.","'changeCurrentDataset' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation"]